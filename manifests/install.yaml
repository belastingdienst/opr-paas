# This is an auto-generated file. DO NOT EDIT
apiVersion: v1
kind: Namespace
metadata:
  labels:
    app.kubernetes.io/component: manager
    app.kubernetes.io/created-by: opr-paas
    app.kubernetes.io/instance: system
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: namespace
    app.kubernetes.io/part-of: opr-paas
    control-plane: controller-manager
  name: paas
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.11.1
  creationTimestamp: null
  name: paas.cpet.belastingdienst.nl
spec:
  group: cpet.belastingdienst.nl
  names:
    kind: Paas
    listKind: PaasList
    plural: paas
    singular: paas
  scope: Cluster
  versions:
  - name: v1alpha1
    schema:
      openAPIV3Schema:
        description: Paas is the Schema for the paas API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: PaasSpec defines the desired state of Paas
            properties:
              capabilities:
                description: Capabilities is a subset of capabilities that will be
                  available in this PaaS Project
                properties:
                  argocd:
                    description: ArgoCD defines the ArgoCD deployment that should
                      be available.
                    properties:
                      enabled:
                        description: Do we want an ArgoCD namespace, default false
                        type: boolean
                      extra_permissions:
                        description: You can enable extra permissions for the service
                          accounts beloning to this capability Exact definitions is
                          configured in Paas Configmap Note that we want to remove
                          (some of) these permissions in future releases (like self-provisioner)
                        type: boolean
                      gitPath:
                        description: the path in the git repo that contains the Applications
                          / Application Sets to be used by this ArgoCD
                        type: string
                      gitRevision:
                        description: The revision of the git repo that contains the
                          Applications / Application Sets to be used by this ArgoCD
                        type: string
                      gitUrl:
                        description: The URL that contains the Applications / Application
                          Sets to be used by this ArgoCD
                        type: string
                      quota:
                        additionalProperties:
                          anyOf:
                          - type: integer
                          - type: string
                          pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                          x-kubernetes-int-or-string: true
                        description: This project has it's own ClusterResourceQuota
                          settings
                        type: object
                      sshSecrets:
                        additionalProperties:
                          type: string
                        description: You can add ssh keys (which is a type of secret)
                          for ArgoCD to use for access to bitBucket They must be encrypted
                          with the public key corresponding to the private key deployed
                          together with the PaaS operator
                        type: object
                    type: object
                  grafana:
                    description: Grafana defines the settings for a Grafana monitoring
                      namespace for this PAAS
                    properties:
                      enabled:
                        description: Do we want a Grafana namespace, default false
                        type: boolean
                      extra_permissions:
                        description: You can enable extra permissions for the service
                          accounts beloning to this capability Exact definitions is
                          configured in Paas Configmap Note that we want to remove
                          (some of) these permissions in future releases (like self-provisioner)
                        type: boolean
                      quota:
                        additionalProperties:
                          anyOf:
                          - type: integer
                          - type: string
                          pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                          x-kubernetes-int-or-string: true
                        description: This project has it's own ClusterResourceQuota
                          settings
                        type: object
                      sshSecrets:
                        additionalProperties:
                          type: string
                        description: You can add ssh keys (which is a type of secret)
                          for ArgoCD to use for access to bitBucket They must be encrypted
                          with the public key corresponding to the private key deployed
                          together with the PaaS operator
                        type: object
                    type: object
                  sso:
                    description: SSO defines the settings for a SSO (KeyCloak) namwespace
                      for this PAAS
                    properties:
                      enabled:
                        description: Do we want an SSO namespace, default false
                        type: boolean
                      extra_permissions:
                        description: You can enable extra permissions for the service
                          accounts beloning to this capability Exact definitions is
                          configured in Paas Configmap Note that we want to remove
                          (some of) these permissions in future releases (like self-provisioner)
                        type: boolean
                      quota:
                        additionalProperties:
                          anyOf:
                          - type: integer
                          - type: string
                          pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                          x-kubernetes-int-or-string: true
                        description: This project has it's own ClusterResourceQuota
                          settings
                        type: object
                      sshSecrets:
                        additionalProperties:
                          type: string
                        description: You can add ssh keys (which is a type of secret)
                          for ArgoCD to use for access to bitBucket They must be encrypted
                          with the public key corresponding to the private key deployed
                          together with the PaaS operator
                        type: object
                    type: object
                  tekton:
                    description: CI defines the settings for a CI namespace (tekton)
                      for this PAAS
                    properties:
                      enabled:
                        description: Do we want a CI (Tekton) namespace, default false
                        type: boolean
                      extra_permissions:
                        description: You can enable extra permissions for the service
                          accounts beloning to this capability Exact definitions is
                          configured in Paas Configmap Note that we want to remove
                          (some of) these permissions in future releases (like self-provisioner)
                        type: boolean
                      quota:
                        additionalProperties:
                          anyOf:
                          - type: integer
                          - type: string
                          pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                          x-kubernetes-int-or-string: true
                        description: This project has it's own ClusterResourceQuota
                          settings
                        type: object
                      sshSecrets:
                        additionalProperties:
                          type: string
                        description: You can add ssh keys (which is a type of secret)
                          for ArgoCD to use for access to bitBucket They must be encrypted
                          with the public key corresponding to the private key deployed
                          together with the PaaS operator
                        type: object
                    type: object
                type: object
              groups:
                additionalProperties:
                  properties:
                    query:
                      type: string
                    roles:
                      items:
                        type: string
                      type: array
                    users:
                      items:
                        type: string
                      type: array
                  type: object
                type: object
              managedByPaas:
                description: Indicated by which 3rd party Paas's ArgoCD this Paas
                  is managed
                type: string
              namespaces:
                description: Namespaces can be used to define extra namespaces to
                  be created as part of this PaaS project
                items:
                  type: string
                type: array
              quota:
                additionalProperties:
                  anyOf:
                  - type: integer
                  - type: string
                  pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                  x-kubernetes-int-or-string: true
                description: Quota defines the quotas which should be set on the cluster
                  resource quota as used by this PaaS project
                type: object
              requestor:
                description: Requestor is an informational field which decides on
                  the requestor (also application responable)
                type: string
              sshSecrets:
                additionalProperties:
                  type: string
                description: You can add ssh keys (which is a type of secret) for
                  ArgoCD to use for access to bitBucket They must be encrypted with
                  the public key corresponding to the private key deployed together
                  with the PaaS operator
                type: object
            required:
            - quota
            - requestor
            type: object
          status:
            description: PaasStatus defines the observed state of Paas
            properties:
              messages:
                description: 'Important: Run "make" to regenerate code after modifying
                  this file'
                items:
                  type: string
                type: array
              quotas:
                additionalProperties:
                  additionalProperties:
                    anyOf:
                    - type: integer
                    - type: string
                    pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                    x-kubernetes-int-or-string: true
                  type: object
                type: object
            required:
            - quotas
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.11.1
  creationTimestamp: null
  name: paasns.cpet.belastingdienst.nl
spec:
  group: cpet.belastingdienst.nl
  names:
    kind: PaasNS
    listKind: PaasNSList
    plural: paasns
    singular: paasns
  scope: Namespaced
  versions:
  - name: v1alpha1
    schema:
      openAPIV3Schema:
        description: PaasNS is the Schema for the paasns API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: PaasNSSpec defines the desired state of PaasNS
            properties:
              groups:
                items:
                  type: string
                type: array
              paas:
                description: Foo is an example field of PaasNS. Edit paasns_types.go
                  to remove/update
                type: string
              sshSecrets:
                additionalProperties:
                  type: string
                type: object
            required:
            - paas
            type: object
          status:
            description: PaasStatus defines the observed state of Paas
            properties:
              messages:
                description: 'Important: Run "make" to regenerate code after modifying
                  this file'
                items:
                  type: string
                type: array
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
---
apiVersion: v1
kind: ServiceAccount
metadata:
  labels:
    app.kubernetes.io/component: rbac
    app.kubernetes.io/created-by: opr-paas
    app.kubernetes.io/instance: controller-manager
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: serviceaccount
    app.kubernetes.io/part-of: opr-paas
  name: controller-manager
  namespace: paas
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  labels:
    app.kubernetes.io/component: rbac
    app.kubernetes.io/created-by: opr-paas
    app.kubernetes.io/instance: leader-election-role
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: role
    app.kubernetes.io/part-of: opr-paas
  name: leader-election-role
rules:
- apiGroups:
  - ""
  resources:
  - configmaps
  verbs:
  - get
  - list
  - watch
  - create
  - update
  - patch
  - delete
- apiGroups:
  - coordination.k8s.io
  resources:
  - leases
  verbs:
  - get
  - list
  - watch
  - create
  - update
  - patch
  - delete
- apiGroups:
  - ""
  resources:
  - events
  verbs:
  - create
  - patch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  creationTimestamp: null
  name: manager-role
rules:
- apiGroups:
  - argoproj.io
  resources:
  - applications
  - applicationsets
  - appprojects
  - argocds
  verbs:
  - create
  - delete
  - list
  - update
  - watch
- apiGroups:
  - ""
  resources:
  - configmaps
  - namespaces
  - secrets
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - cpet.belastingdienst.nl
  resources:
  - paas
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - cpet.belastingdienst.nl
  resources:
  - paas/finalizers
  verbs:
  - update
- apiGroups:
  - cpet.belastingdienst.nl
  resources:
  - paas/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - cpet.belastingdienst.nl
  resources:
  - paasns
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - cpet.belastingdienst.nl
  resources:
  - paasns/finalizers
  verbs:
  - update
- apiGroups:
  - cpet.belastingdienst.nl
  resources:
  - paasns/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - quota.openshift.io
  resources:
  - clusterresourcequotas
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - rbac.authorization.k8s.io
  resources:
  - clusterrolebindings
  - rolebindings
  verbs:
  - create
  - delete
  - escallate
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - rbac.authorization.k8s.io
  resourceNames:
  - admin
  resources:
  - clusterroles
  verbs:
  - bind
- apiGroups:
  - user.openshift.io
  resources:
  - groups
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  labels:
    app.kubernetes.io/component: rbac
    app.kubernetes.io/created-by: opr-paas
    app.kubernetes.io/instance: leader-election-rolebinding
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: rolebinding
    app.kubernetes.io/part-of: opr-paas
  name: leader-election-rolebinding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: leader-election-role
subjects:
- kind: ServiceAccount
  name: controller-manager
  namespace: paas
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  labels:
    app.kubernetes.io/component: rbac
    app.kubernetes.io/created-by: opr-paas
    app.kubernetes.io/instance: manager-rolebinding
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: clusterrolebinding
    app.kubernetes.io/part-of: opr-paas
  name: manager-rolebinding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: manager-role
subjects:
- kind: ServiceAccount
  name: controller-manager
  namespace: paas
---
apiVersion: v1
data:
  config.yaml: |
    ---
    debug: false
    whitelist:
      namespace: kube-system
      name: whitelist
    ldap:
      host: my-ldap.mydomain.org
      port: 636
    argopermissions:
      resource_name: argo-service
      role: admin
      header: g, system:cluster-admins, role:admin
      retries: 10
    managed_by_label: argocd.argoproj.io/managed-by
    requestor_label: requestor
    decryptKeyPaths:
      - /secrets/paas
    applicationset_namespace: argocd
    exclude_appset_name: bb-gen
    quota_label: clusterquotagroup
    rolemappings:
      default:
        - admin
      editor:
        - edit
      viewer:
        - view
      administrator:
        - admin
    capabilities:
      argocd:
        applicationset: paas-argocd
        quotas:
          defaults:
            limits.cpu: "8"
            limits.memory: 8Gi
            requests.cpu: "4"
            requests.memory: 5Gi
            requests.storage: "5Gi"
            thin.storageclass.storage.k8s.io/persistentvolumeclaims: "0"
        default_permissions:
          argocd-argocd-application-controller:
            - monitoring-edit
            - alert-routing-edit
      grafana:
        applicationset: paas-grafana
        quotas:
          defaults:
            limits.cpu: "2"
            limits.memory: 3Gi
            requests.cpu: "1"
            requests.memory: 1Gi
            requests.storage: "2Gi"
            thin.storageclass.storage.k8s.io/persistentvolumeclaims: "0"
      tekton:
        applicationset: paas-tekton
        quotas:
          clusterwide: true
          ratio: 0.1
          defaults:
            limits.cpu: "5"
            limits.memory: 8Gi
            requests.cpu: "1"
            requests.memory: 2Gi
            requests.storage: "100Gi"
            thin.storageclass.storage.k8s.io/persistentvolumeclaims: "0"
        default_permissions:
          pipeline:
            - monitoring-edit
            - alert-routing-edit
      sso:
        applicationset: paas-sso
        quotas:
          defaults:
            limits.cpu: "4"
            limits.memory: 4Gi
            requests.cpu: "2"
            requests.memory: 2Gi
            requests.storage: "5Gi"
            thin.storageclass.storage.k8s.io/persistentvolumeclaims: "0"
kind: ConfigMap
metadata:
  name: config
  namespace: paas
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app.kubernetes.io/component: manager
    app.kubernetes.io/created-by: opr-paas
    app.kubernetes.io/instance: controller-manager
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: deployment
    app.kubernetes.io/part-of: opr-paas
    control-plane: controller-manager
  name: controller-manager
  namespace: paas
spec:
  replicas: 1
  selector:
    matchLabels:
      control-plane: controller-manager
  template:
    metadata:
      annotations:
        kubectl.kubernetes.io/default-container: manager
      labels:
        control-plane: controller-manager
    spec:
      containers:
      - args:
        - --leader-elect
        command:
        - /manager
        image: ghcr.io/belastingdienst/opr-paas:latest
        imagePullPolicy: Always
        livenessProbe:
          httpGet:
            path: /healthz
            port: 8081
          initialDelaySeconds: 15
          periodSeconds: 20
        name: manager
        readinessProbe:
          httpGet:
            path: /readyz
            port: 8081
          initialDelaySeconds: 5
          periodSeconds: 10
        resources:
          limits:
            cpu: 500m
            memory: 128Mi
          requests:
            cpu: 10m
            memory: 64Mi
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
        volumeMounts:
        - mountPath: /etc/paas
          name: paas-config
      serviceAccountName: controller-manager
      terminationGracePeriodSeconds: 10
      volumes:
      - configMap:
          defaultMode: 420
          name: config
        name: paas-config
