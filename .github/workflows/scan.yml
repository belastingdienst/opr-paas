# SPDX-FileCopyrightText: Alliander N.V.
#
# SPDX-License-Identifier: Apache-2.0

name: OSPO Code Scan
run-name: 'Scan "${{ inputs.repository }}" with git ref "${{ inputs.ref }}"'

on:
  workflow_dispatch:
    inputs:
      repository:
        description: 'GitHub repository path (myorg/myrepo)'
        required: true
        default: 'belastingdienst/opr-paas'
        type: string
      ref:
        description: 'Optional git reference or branch to scan (main/master)'
        default: ''

jobs:
  scan:

    # Global variables / configuration
    env:
      ORT_STEPS: "analyzer,evaluator,reporter,upload-results"
      ORT_CONFIG_REPO: "github.com/oss-review-toolkit/ort-config.git"

    runs-on: ubuntu-24.04

    # The steps use `if: ${{ !cancelled }}` so that the entire workflow is run
    # whilst individual steps can be marked as failed.
    steps:
    - name: Checkout project
      uses: actions/checkout@v4
      with:
        repository: ${{ inputs.repository }}
        ref: ${{ inputs.ref }}

    - name: Ensure output directory
      if: ${{ !cancelled() }}
      run: |
        mkdir ../results

    - name: Get commit hash
      if: ${{ !cancelled() }}
      run: |
        echo "COMMIT_HASH=$(git rev-parse HEAD)" >> $GITHUB_ENV

    # Run steps in an untainted repository
    - name: üîç Copyright and license annotations (REUSE)
      if: ${{ !cancelled() }}
      uses: fsfe/reuse-action@v4

    - name: Generate software name from repository (for ORT)
      if: ${{ !cancelled() }}
      env:
        SW_REPOSITORY: ${{ inputs.repository }}
      run: |
        echo "SW_NAME=${SW_REPOSITORY#*/}" >> $GITHUB_ENV

    - name: üîç Open source license policy (ORT)
      if: ${{ !cancelled() }}
      uses: oss-review-toolkit/ort-ci-github-action@main
      with:
        ort-config-repository: "https://${{ env.ORT_CONFIG_REPO }}"
        run: "${{ env.ORT_STEPS }}"
        sw-name: "${{ env.SW_NAME }}"