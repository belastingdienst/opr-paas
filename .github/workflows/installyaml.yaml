name: Release workflow for generating install.yaml
on:
  workflow_dispatch:
  release:
    types:
      - published

jobs:
  sbom:
    name: Generate and upload install.yaml
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pull-requests: write
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install kustomize
        run: make kustomize

      - name: Generate install.yaml
        run: |
          make build-installer
        env:
          IMAGE_TAG: ${{ github.ref_name }}

#      - name: Create PR
#        run: |
#          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
#          git config user.name "github-actions[bot]"
#          export DESTINATION_BRANCH="release_${{ github.ref_name }}"
#          git checkout -b "${DESTINATION_BRANCH}"
#          git commit -a -m "chore: Bump release info"
#          git push --force --set-upstream origin "${DESTINATION_BRANCH}"
#          gh pr create -H "${DESTINATION_BRANCH}" -B main --title 'chore: Update release info into main' --body 'Created by install.yaml action'
#        env:
#          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Create PR
        run: |
          export TODAY=$( date -u '+%Y-%m-%d' )
          export DESTINATION_BRANCH="release_${{ github.ref_name }}"
          git push origin HEAD:refs/heads/${DESTINATION_BRANCH}
          echo "DEBUG - Passed push"
          git diff --name-only | while read FILE_TO_COMMIT; do
            # Explicitly skip any workflow related files
            if [[ "${FILE_TO_COMMIT}" == .github/workflows* ]]; then
              echo "Found workflow file being changed, skipping commit for that file"
              continue
            fi
            export MESSAGE="chore: regenerate ${FILE_TO_COMMIT} for ${TODAY}"
            export SHA=$( git rev-parse ${DESTINATION_BRANCH}:${FILE_TO_COMMIT} )
            export CONTENT=$( base64 -w 0 -i ${FILE_TO_COMMIT} )
            # https://docs.github.com/en/rest/repos/contents?apiVersion=2022-11-28#create-or-update-file-contents
            gh api --method PUT \
              -H "Accept: application/vnd.github+json" \
              -H "X-GitHub-Api-Version: 2022-11-28" \
              /repos/:owner/:repo/contents/$FILE_TO_COMMIT \
              -f "message=${MESSAGE}" \
              -f "content=${CONTENT}" \
              -f "encoding=base64" \
              -f "branch=${DESTINATION_BRANCH}" \
              -f "sha=${SHA}"
          done
          echo "DEBUG - Passed commit"
          # gh pr create -H release_${{ github.ref_name }} -B main --title 'ci: Update release info into main' --body 'Created by install.yaml action'
          gh pr create --title "ci: Update release info into main" --body "This PR merges changes from ${DESTINATION_BRANCH} to main." --base main --head ${DESTINATION_BRANCH}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Add install.yaml to release
        uses: softprops/action-gh-release@v2
        with:
          files: manifests/install.yaml
