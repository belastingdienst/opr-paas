---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.11.1
  creationTimestamp: null
  name: paas.cpet.belastingdienst.nl
spec:
  group: cpet.belastingdienst.nl
  names:
    kind: Paas
    listKind: PaasList
    plural: paas
    singular: paas
  scope: Cluster
  versions:
  - name: v1alpha1
    schema:
      openAPIV3Schema:
        description: Paas is the Schema for the paas API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: PaasSpec defines the desired state of Paas
            properties:
              capabilities:
                description: Cabailities is a subset of capabilities that will be
                  available in this Pass Project
                properties:
                  argocd:
                    description: ArgoCD defines the ArgoCD deployment that should
                      be available.
                    properties:
                      enabled:
                        description: Do we want an ArgoCD namespace, default false
                        type: boolean
                      gitPath:
                        description: the path in the git repo that contains the Applications
                          / Application Sets to be used by this ArgoCD
                        type: string
                      gitRevision:
                        description: The revision of the git repo that contains the
                          Applications / Application Sets to be used by this ArgoCD
                        type: string
                      gitUrl:
                        description: The URL that contains the Applications / Application
                          Sets to be used by this ArgoCD
                        type: string
                      quota:
                        additionalProperties:
                          anyOf:
                          - type: integer
                          - type: string
                          pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                          x-kubernetes-int-or-string: true
                        description: This project has it's own ClusterResourceQuota
                          seetings
                        type: object
                      sshSecrets:
                        additionalProperties:
                          type: string
                        description: You can add ssh keys (which is a type of secret)
                          for ArgoCD to use for access to bitBucket They must be encrypted
                          with the public key corresponding to the private key deployed
                          together with the PaaS operator
                        type: object
                    type: object
                  grafana:
                    description: Grafana defines the settings for a Grafana monitoring
                      namespace for this PAAS
                    properties:
                      enabled:
                        description: Do we want a Grafana namespace, default false
                        type: boolean
                      quota:
                        additionalProperties:
                          anyOf:
                          - type: integer
                          - type: string
                          pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                          x-kubernetes-int-or-string: true
                        description: This project has it's own ClusterResourceQuota
                          seetings
                        type: object
                      sshSecrets:
                        additionalProperties:
                          type: string
                        description: You can add ssh keys (which is a type of secret)
                          for ArgoCD to use for access to bitBucket They must be encrypted
                          with the public key corresponding to the private key deployed
                          together with the PaaS operator
                        type: object
                    type: object
                  sso:
                    description: SSO defines the settings for a SSO (KeyCloak) namwespace
                      for this PAAS
                    properties:
                      enabled:
                        description: Do we want an SSO namespace, default false
                        type: boolean
                      quota:
                        additionalProperties:
                          anyOf:
                          - type: integer
                          - type: string
                          pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                          x-kubernetes-int-or-string: true
                        description: This project has it's own ClusterResourceQuota
                          seetings
                        type: object
                      sshSecrets:
                        additionalProperties:
                          type: string
                        description: You can add ssh keys (which is a type of secret)
                          for ArgoCD to use for access to bitBucket They must be encrypted
                          with the public key corresponding to the private key deployed
                          together with the PaaS operator
                        type: object
                    type: object
                  tekton:
                    description: CI defines the settings for a CI namespace (tekton)
                      for this PAAS
                    properties:
                      enabled:
                        description: Do we want a CI (Tekton) namespace, default false
                        type: boolean
                      quota:
                        additionalProperties:
                          anyOf:
                          - type: integer
                          - type: string
                          pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                          x-kubernetes-int-or-string: true
                        description: This project has it's own ClusterResourceQuota
                          seetings
                        type: object
                      sshSecrets:
                        additionalProperties:
                          type: string
                        description: You can add ssh keys (which is a type of secret)
                          for ArgoCD to use for access to bitBucket They must be encrypted
                          with the public key corresponding to the private key deployed
                          together with the PaaS operator
                        type: object
                    type: object
                type: object
              groups:
                additionalProperties:
                  properties:
                    query:
                      type: string
                    users:
                      items:
                        type: string
                      type: array
                  required:
                  - users
                  type: object
                type: object
              namespaces:
                description: Namespaces can be used to define extra namespaces to
                  be created as part of this PaaS project
                items:
                  type: string
                type: array
              oplosGroep:
                description: Oplosgroep is an informational field which decides on
                  the oplosgroep that is responsible
                type: string
              quota:
                additionalProperties:
                  anyOf:
                  - type: integer
                  - type: string
                  pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                  x-kubernetes-int-or-string: true
                description: Quota defines the quotas which should be set on the cluster
                  resource quota as used by this PaaS project
                type: object
              sshSecrets:
                additionalProperties:
                  type: string
                description: You can add ssh keys (which is a type of secret) for
                  ArgoCD to use for access to bitBucket They must be encrypted with
                  the public key corresponding to the private key deployed together
                  with the PaaS operator
                type: object
            required:
            - oplosGroep
            - quota
            type: object
          status:
            description: PaasStatus defines the observed state of Paas
            properties:
              argocdUrl:
                description: 'Important: Run "make" to regenerate code after modifying
                  this file'
                type: string
              grafanaUrl:
                type: string
            required:
            - argocdUrl
            - grafanaUrl
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
